[General]
SyntaxVersion=2
BeginHotkey=121
BeginHotkeyMod=0
PauseHotkey=0
PauseHotkeyMod=0
StopHotkey=122
StopHotkeyMod=0
RunOnce=1
EnableWindow=
MacroID=6c55070a-886f-4d8a-a5d0-6fe2013a44d5
Description=TroveFishBack1.2
Enable=0
AutoRun=0
[Repeat]
Type=0
Number=1
[SetupUI]
Type=1
QUI=Form1
[Relative]
SetupOCXFile=
[Comment]
TroveFishBack

[UIPackage]



[Script]
//TracePrint "TracePrint"
Dimenv Hwnd
Dim FlagForDelay
Dim DX, DY, x_CurrentLeftTop, y_CurrentLeftTop, x_CurrentRightBottom, y_CurrentRightBottom, x_Find, y_Find, FindNone, Mark_AntiOffline
Dim xyFind_Fish
Dim TColorF,TColorB
    
//Initialization
Hwnd = Plugin.Window.Find("SDL_app", 0)
//MsgBox Hwnd
//EndScript
Call SetSearchRange()
Mark_AntiOffline = 0 : FindNone = 0 : FlagForDelay = 300
TColorF = "1414D1" : TColorB = "5F4200"

Call InitSearchRange()

Do
    //    Call FindFishColor()
    xyFind_Fish = FindColorT(x_CurrentLeftTop, y_CurrentLeftTop, x_CurrentRightBottom, y_CurrentRightBottom, TColorF)

    //Test Msg show on Form1
    //    Form1.InputBoxTest1.Text = x_Find : Form1.InputBoxTest2.Text = y_Find
    Form1.InputBoxTest1.Text = xyFind_Fish(0) : Form1.InputBoxTest2.Text = xyFind_Fish(1)
    If DX = 0 or DY = 0 Then 
        If xyFind_Fish(0) = - 1  Then 
            Delay 3000
            //            Call FindFishColor()
            xyFind_Fish = FindColorT(x_CurrentLeftTop, y_CurrentLeftTop, x_CurrentRightBottom, y_CurrentRightBottom, TColorF)
            If xyFind_Fish(0) = - 1  Then 
                // Msgbox "Goto ResetFishingAction"
                // To determine whether the number of failures is too high
                If FindNone > 3 Then 
                    FindNone = 0
                    Call CleanBackpack()
                    //MsgBox "Error Fishing"
                Else 
                    FindNone = FindNone + 1
                End If
                Goto ResetFishingAction
            End If 
        End If
        DX = xyFind_Fish(0) : DY = xyFind_Fish(1)
        x_CurrentLeftTop = DX - Form1.InputBoxWindowWidth.Text * 0.007 - 1 : x_CurrentRightBottom = DX + Form1.InputBoxWindowWidth.Text * 0.007 + 1
        y_CurrentLeftTop = DY - Form1.InputBoxWindowHight.Text * 0.01 - 1 : y_CurrentRightBottom = DY + Form1.InputBoxWindowHight.Text * 0.01 + 1
        TracePrint "Current size :" & (x_CurrentRightBottom - x_CurrentLeftTop) & " " & (y_CurrentLeftTop - y_CurrentRightBottom)
    End If
    If xyFind_Fish(0) = - 1  Then 
        //        Form1.InputBox304.Text = "x_CurrentLeftTop: "&x_CurrentLeftTop
        Delay 800 + FlagForDelay
        If FlagForDelay = 300 Then 
            FlagForDelay = 500
        ElseIf FlagForDelay = 500 Then
            FlagForDelay = 700
        ElseIf FlagForDelay = 700
            FlagForDelay = 900
        Else 
            FlagForDelay = 300
        End If
        Call PressF()
        Delay (2600 + (1000 - FlagForDelay))
        Call AntiOffline()
        //Reboot action group
        Rem ResetFishingAction
        Call InitSearchRange()
        Call PressF()
        Delay (7000+FlagForDelay)
    End If
    Delay 50
Loop


Sub InitSearchRange()
    DX = 0 : DY = 0
    x_CurrentLeftTop = Form1.InputBoxXL0.Text : y_CurrentLeftTop = Form1.InputBoxYL0.Text : x_CurrentRightBottom = Form1.InputBoxXR0.Text : y_CurrentRightBottom = Form1.InputBoxYR0.Text
End Sub

//TODO:delete function
//Sub FindFishColor()
//MsgBox "Error:Into FindFishColor()"
//EndScript
//    If Form1.Slider1.Value = 0 Then 
//        FindColorEx x_CurrentLeftTop, y_CurrentLeftTop, x_CurrentRightBottom, y_CurrentRightBottom, TColor1, 0, 0.8, x_Find, y_Find
//    Else 
//        ab = Plugin.Bkgnd.FindColorEx(Hwnd, x_CurrentLeftTop, y_CurrentLeftTop, x_CurrentRightBottom, y_CurrentRightBottom, TColor1, 0, 0.8)
//        dim MyArray   
//        MyArray = Split(ab, "|")    
//        x_Find = Clng(MyArray(0)) : y_Find = Clng(MyArray(1))
//    End If
//End Sub

//TODO:delete function
//Function FindColorSuccess(x1, y1, x2, y2, TargetColor)
//    If Form1.Slider1.Value = 0 Then 
//        FindColorEx x1, y1, x2, y2, TargetColor, 0, 0.9, x_Find, y_Find
//    Else 
//        ab = Plugin.Bkgnd.FindColorEx(Hwnd, x1, y1, x2, y2, TargetColor, 0, 0.9)
//        dim MyArray   
//        MyArray = Split(ab, "|")    
//        x_Find = Clng(MyArray(0)) : y_Find = Clng(MyArray(1))
//    End If
//    If x_Find = - 1  Then 
//        FindColorSuccess = 0
//    Else 
//        FindColorSuccess = 1
//    End If
//End Function

Function FindColorT(x1, y1, x2, y2, TargetColor)
    Dim ab, MyArray,xf,yf
    ab = Plugin.Bkgnd.FindColorEx(Hwnd, x1, y1, x2, y2, TargetColor, 0, 0.9)
    MyArray = Split(ab, "|")    
    xf = Clng(MyArray(0)) : yf = Clng(MyArray(1))
    TracePrint "FindColorT:xf and yf is [" & xf & ", " & yf & "}"
    FindColorT = Array(xf, yf)
End Function

Sub PressF()
    //    If Form1.Slider1.Value = 0 Then 
    //        KeyPress "F", 1
    //    Else 
    Call Plugin.Bkgnd.KeyPress(Hwnd, 70)
    //    End If
    //    Delay 1000
End Sub


Sub PressKey(key)
    If Form1.Slider1.Value = 0 Then 
        //The background key method used here may be problematic
        Call Plugin.Bkgnd.KeyPress(Hwnd, key)
    Else 
        Call Plugin.Bkgnd.KeyPress(Hwnd, key)
    End If
End Sub


Sub SetSearchRange()
    Dim x_d, y_d
    Call GetWindowSize()
    Call InitializeBackpackGrid()
    x_d = Form1.InputBoxWindowWidth.Text : y_d = Form1.InputBoxWindowHight.Text
    Form1.InputBoxXL0.Text = x_d * Form1.InputBoxXScaleL.Text : Form1.InputBoxXR0.Text = x_d * Form1.InputBoxXScaleR.Text : Form1.InputBoxYL0.Text = y_d * Form1.InputBoxYScaleT.Text : Form1.InputBoxYR0.Text = y_d * Form1.InputBoxYScaleB.Text
    
End Sub


Sub CleanBackpack()
    If Form1.SliderSpaceRecovery.Value = 0 Then 
        //Remove items
        Call RemoveItems()
    Else 
        //Decompose items
        Call DecomposeItems()
    End If
End Sub


Sub InitializeBackpackGrid()
    //TODO
    Dim x_d, y_d
    x_d = Form1.InputBoxWindowWidth.Text : y_d = Form1.InputBoxWindowHight.Text
	
End Sub
Sub RemoveItems()
    Call OpenBackpack()
    //TODO
End Sub

Sub DecomposeItems()
End Sub

Function OpenBackpack()
    //Make sure the backpack is open
    Dim x0, y0, x1, y1, x2, y2
    Dim fc

    x1 = Form1.InputBoxWindowWidth.Text * 0.6 : x2 = Form1.InputBoxWindowWidth.Text
    y1 = Form1.InputBoxWindowHight.Text / 2 - 1 : y2 = Form1.InputBoxWindowHight.Text / 2 + 1
    fc = FindColorT(x1, y1, x2, y2, TColorB)
    If fc(0) = -1 Then 
        Delay 500 
        Call Plugin.Bkgnd.KeyPress(Hwnd, 66)
        Delay 500 
    End If
End Function

Sub GetWindowSize()
    If Form1.CheckBoxScreen.Value = 1 Then 
        Form1.InputBoxWindowWidth.Text= Plugin.GetSysInfo.GetScreenResolutionX() : Form1.InputBoxWindowHight.Text = Plugin.GetSysInfo.GetScreenResolutionY()
    Else 
        Dim sRect
        sRect = Plugin.Window.GetClientRect(Hwnd)
        //    MsgBox "SetClientRect():" & sRect
        TracePrint "GetWindowSize : Hwnd = " & Hwnd
        dim ArrayRect
        ArrayRect = Split(sRect, "|")
        Dim x1, y1, x2, y2
        x1 = Clng(ArrayRect(0)) : y1 = Clng(ArrayRect(1)) : x2 = Clng(ArrayRect(2)) : y2 = Clng(ArrayRect(3))
        //    MsgBox sRect
        Form1.InputBoxWindowWidth.Text = x2 - x1 : Form1.InputBoxWindowHight.Text = y2 - y1
    End If
    //    Form1.InputBox304.Text = "GetWindowSize"
End Sub

Sub AntiOffline()
    //Perform some operations to prevent the network from disconnecting
    TracePrint "AntiOffline" & Mark_AntiOffline
    If Mark_AntiOffline > 10 Then 
        Mark_AntiOffline = 0
        Delay 1000
        Dim j
        j = 0
        While j < 2
            Call Plugin.Bkgnd.KeyPress(Hwnd, 32)
            Delay 500
            j = j + 1
        Wend
        Delay 3000
    Else 
        Mark_AntiOffline = Mark_AntiOffline + 1
    End If
End Sub

Event Form1.ButtonGetClientRect.Click
    Call SetSearchRange()
    //    If Form1.CheckBoxScreen.Value = 1 Then 
    //        MsgBox "Do not click this button, when the full-screen game , start the script can automatically get the range"
    //    Else 
    //        
    //    End If
    Exit Event  
    MsgBox 1
End Event 
Event Form1.LoadOver
    Hwnd = Plugin.Window.Find("SDL_app", 0)
    Call SetSearchRange()
End Event
Event Form1.Label4.Click
End Event
Event Form1.InputBoxYR0.Change
End Event
Event Form1.InputBox304.Change
End Event
Event Form1.InputBoxXScaleL.Change
End Event
Event Form1.ButtonPressB.Click
    Call OpenBackpack()
End Event
